android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> b
    android.os.Bundle getArguments() -> b
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> c
    android.content.res.Resources getResources() -> d
    java.lang.String getString(int) -> a
    java.lang.String getString(int,java.lang.Object[]) -> a
    android.support.v4.app.FragmentManager getChildFragmentManager() -> e
    boolean isAdded() -> f
    boolean isDetached() -> g
    boolean isHidden() -> h
    void onHiddenChanged(boolean) -> a
    void setMenuVisibility(boolean) -> b
    void setUserVisibleHint(boolean) -> c
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> c
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> i
    void onActivityCreated(android.os.Bundle) -> e
    void onViewStateRestored(android.os.Bundle) -> f
    void onStart() -> j
    void onResume() -> k
    void onSaveInstanceState(android.os.Bundle) -> g
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> l
    void onStop() -> m
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> n
    void onDestroy() -> o
    void initState() -> p
    void onDetach() -> q
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> r
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> s
    void performCreate(android.os.Bundle) -> h
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> i
    void performStart() -> t
    void performResume() -> u
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> v
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> j
    void performPause() -> w
    void performStop() -> x
    void performReallyStop() -> y
    void performDestroyView() -> z
    void performDestroy() -> A
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.t:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.u:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.v:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.w:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.y:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.z:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.aa:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ab:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ac:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ad:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ae:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.af:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.f:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void evictAll() -> a
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.c.g:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.h:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.k:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.l:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.m:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.n:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> c
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.be:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bf:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bg:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bh:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bi:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.bj:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bk:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bm:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bn:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bo:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bp:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.br:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bs:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bt:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bu:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a_
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bv:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bw:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bx:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.by:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    void setFocusable(boolean) -> a
    boolean isFocused() -> f
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> g
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> h
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> i
    void setSelected(boolean) -> e
    boolean isClickable() -> j
    void setClickable(boolean) -> f
    boolean isLongClickable() -> k
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> l
    void setEnabled(boolean) -> h
    boolean isPassword() -> m
    boolean isScrollable() -> n
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> o
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> p
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> q
    java.lang.CharSequence getContentDescription() -> r
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> s
    java.lang.String getViewIdResourceName() -> t
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> r
    boolean isAccessibilityFocused(java.lang.Object) -> s
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.i:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean isAccessibilityFocused(java.lang.Object) -> b
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.j:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.s:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.t:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.u:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.w:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.x:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.y:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.z:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.aa:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ab:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ad:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int mMinDrawerMargin -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.graphics.Paint mScrimPaint -> f
    android.support.v4.widget.ViewDragHelper mLeftDragger -> g
    android.support.v4.widget.ViewDragHelper mRightDragger -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    int mDrawerState -> k
    boolean mInLayout -> l
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    int mLockModeRight -> o
    boolean mDisallowInterceptRequested -> p
    boolean mChildrenCanceledTouch -> q
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    android.graphics.drawable.Drawable mShadowLeft -> u
    android.graphics.drawable.Drawable mShadowRight -> v
    java.lang.CharSequence mTitleLeft -> w
    java.lang.CharSequence mTitleRight -> x
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> b
    java.lang.String gravityToString(int) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> d
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibilitiy(android.view.View) -> m
    int[] access$100() -> d
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
    boolean access$300(android.view.View) -> k
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.b:
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.c:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.d:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.e:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.f:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.g:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.h:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.k:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.l:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.m:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.n:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.o:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.p:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.q:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.r:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.t:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.u:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.v:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.w:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.y:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.z:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.aa:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ab:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ac:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ad:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ae:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.jfeinstein.jazzyviewpager.JazzyViewPager -> com.jfeinstein.jazzyviewpager.JazzyViewPager:
    boolean mEnabled -> c
    boolean mFadeEnabled -> d
    boolean mOutlineEnabled -> e
    int sOutlineColor -> a
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect mEffect -> f
    java.util.HashMap mObjs -> g
    boolean API_11 -> h
    android.graphics.Rect mRect -> i
    int pagerCount -> j
    int currentItem -> k
    boolean handleDefault -> l
    float preX -> b
    boolean isSpringback -> m
    com.jfeinstein.jazzyviewpager.JazzyViewPager$State mState -> n
    int oldPage -> o
    android.view.View mLeft -> p
    android.view.View mRight -> q
    float mRot -> r
    float mTrans -> s
    float mScale -> t
    android.graphics.Matrix mMatrix -> u
    android.graphics.Camera mCamera -> v
    float[] mTempFloat2 -> w
    boolean isTouchable -> x
    int[] $SWITCH_TABLE$com$jfeinstein$jazzyviewpager$JazzyViewPager$TransitionEffect -> y
    void setSpringBack(boolean) -> setSpringBack
    void setTransitionEffect(com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect) -> setTransitionEffect
    void setPagingEnabled(boolean) -> setPagingEnabled
    void setFadeEnabled(boolean) -> setFadeEnabled
    boolean getFadeEnabled() -> getFadeEnabled
    void setOutlineEnabled(boolean) -> setOutlineEnabled
    void setOutlineColor(int) -> setOutlineColor
    void wrapWithOutlines() -> h
    android.view.View wrapChild(android.view.View) -> c
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,int,int) -> addView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void logState(android.view.View,java.lang.String) -> a
    void animateTablet(android.view.View,android.view.View,float) -> a
    void animateCube(android.view.View,android.view.View,float,boolean) -> a
    void animateAccordion(android.view.View,android.view.View,float) -> c
    void animateZoom(android.view.View,android.view.View,float,boolean) -> b
    void animateRotate(android.view.View,android.view.View,float,boolean) -> c
    void animateFlipHorizontal(android.view.View,android.view.View,float,int) -> c
    void animateFlipVertical(android.view.View,android.view.View,float,int) -> d
    void animateStack(android.view.View,android.view.View,float,int) -> a
    void animateAlpha(android.view.View,android.view.View,float,int) -> b
    void manageLayer(android.view.View,boolean) -> a
    void disableHardwareLayer() -> i
    float getOffsetXForRotation(float,int,int) -> a
    void animateFade(android.view.View,android.view.View,float) -> b
    void animateOutline(android.view.View,android.view.View) -> a
    void onPageScrolled(int,float,int) -> a
    boolean isSmall(float) -> b
    void setObjectForPosition(java.lang.Object,int) -> a
    android.view.View findViewFromObject(int) -> d
    void setTouchable(boolean) -> setTouchable
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setpagerCount(int) -> setpagerCount
    void setCurrentIndex(int) -> setCurrentIndex
    void whetherConditionIsRight(float) -> c
    void onTouchActionUp() -> j
    void recoveryPosition() -> k
    int[] $SWITCH_TABLE$com$jfeinstein$jazzyviewpager$JazzyViewPager$TransitionEffect() -> g
com.jfeinstein.jazzyviewpager.JazzyViewPager$State -> com.jfeinstein.jazzyviewpager.a:
    com.jfeinstein.jazzyviewpager.JazzyViewPager$State IDLE -> a
    com.jfeinstein.jazzyviewpager.JazzyViewPager$State GOING_LEFT -> b
    com.jfeinstein.jazzyviewpager.JazzyViewPager$State GOING_RIGHT -> c
    com.jfeinstein.jazzyviewpager.JazzyViewPager$State[] ENUM$VALUES -> d
    com.jfeinstein.jazzyviewpager.JazzyViewPager$State[] values() -> values
    com.jfeinstein.jazzyviewpager.JazzyViewPager$State valueOf(java.lang.String) -> valueOf
com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect -> com.jfeinstein.jazzyviewpager.b:
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect Alpha -> a
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect Standard -> b
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect Tablet -> c
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect CubeIn -> d
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect CubeOut -> e
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect FlipVertical -> f
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect FlipHorizontal -> g
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect Stack -> h
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect ZoomIn -> i
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect ZoomOut -> j
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect RotateUp -> k
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect RotateDown -> l
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect Accordion -> m
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect[] ENUM$VALUES -> n
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect[] values() -> values
    com.jfeinstein.jazzyviewpager.JazzyViewPager$TransitionEffect valueOf(java.lang.String) -> valueOf
com.jfeinstein.jazzyviewpager.OutlineContainer -> com.jfeinstein.jazzyviewpager.c:
    android.graphics.Paint mOutlinePaint -> a
    boolean mIsRunning -> b
    long mStartTime -> c
    float mAlpha -> d
    android.view.animation.Interpolator mInterpolator -> e
    java.lang.Runnable mUpdater -> f
    void init() -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setOutlineAlpha(float) -> setOutlineAlpha
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    long access$0(com.jfeinstein.jazzyviewpager.OutlineContainer) -> a
    void access$1(com.jfeinstein.jazzyviewpager.OutlineContainer,float) -> a
    android.view.animation.Interpolator access$2(com.jfeinstein.jazzyviewpager.OutlineContainer) -> b
    java.lang.Runnable access$3(com.jfeinstein.jazzyviewpager.OutlineContainer) -> c
com.jfeinstein.jazzyviewpager.OutlineContainer$1 -> com.jfeinstein.jazzyviewpager.d:
    com.jfeinstein.jazzyviewpager.OutlineContainer this$0 -> a
    float getInterpolation(float) -> getInterpolation
com.jfeinstein.jazzyviewpager.OutlineContainer$2 -> com.jfeinstein.jazzyviewpager.e:
    com.jfeinstein.jazzyviewpager.OutlineContainer this$0 -> a
    void run() -> run
com.jfeinstein.jazzyviewpager.R -> com.jfeinstein.jazzyviewpager.f:
com.jfeinstein.jazzyviewpager.R$array -> com.jfeinstein.jazzyviewpager.g:
    int jazzy_effects -> jazzy_effects
com.jfeinstein.jazzyviewpager.R$color -> com.jfeinstein.jazzyviewpager.h:
    int holo_blue -> holo_blue
com.jfeinstein.jazzyviewpager.R$styleable -> com.jfeinstein.jazzyviewpager.i:
    int[] JazzyViewPager -> JazzyViewPager
    int JazzyViewPager_fadeEnabled -> JazzyViewPager_fadeEnabled
    int JazzyViewPager_outlineColor -> JazzyViewPager_outlineColor
    int JazzyViewPager_outlineEnabled -> JazzyViewPager_outlineEnabled
    int JazzyViewPager_style -> JazzyViewPager_style
com.jfeinstein.jazzyviewpager.Util -> com.jfeinstein.jazzyviewpager.j:
    int dpToPx(android.content.res.Resources,int) -> a
com.mars.note.BackUpAndRestore -> com.mars.note.BackUpAndRestore:
    java.lang.String TAG -> a
    android.widget.ListView mListView -> b
    android.widget.BaseAdapter mAdapter -> c
    java.util.List mData -> d
    java.lang.String BACKUP_PATH -> e
    java.lang.String[] date_title -> f
    java.lang.String[] time_title -> g
    android.widget.TextView listDescription -> h
    com.mars.note.database.NoteDataBaseManager noteDBManager -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void readData() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void showSaveDialog() -> b
    void addNewBackUp(java.lang.String) -> a
    void access$0(com.mars.note.BackUpAndRestore,java.lang.String) -> a
com.mars.note.BackUpAndRestore$1 -> com.mars.note.a:
    com.mars.note.BackUpAndRestore this$0 -> a
    java.lang.String val$fileName -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.BackUpAndRestore$BackupListAdapter -> com.mars.note.b:
    android.view.LayoutInflater inflater -> a
    com.mars.note.BackUpAndRestore this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.mars.note.BackUpAndRestore access$0(com.mars.note.BackUpAndRestore$BackupListAdapter) -> a
com.mars.note.BackUpAndRestore$BackupListAdapter$1 -> com.mars.note.c:
    com.mars.note.BackUpAndRestore$BackupListAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
    com.mars.note.BackUpAndRestore$BackupListAdapter access$0(com.mars.note.BackUpAndRestore$BackupListAdapter$1) -> a
com.mars.note.BackUpAndRestore$BackupListAdapter$1$1 -> com.mars.note.d:
    com.mars.note.BackUpAndRestore$BackupListAdapter$1 this$2 -> a
    com.mars.note.BackupDoc val$f -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.BackUpAndRestore$BackupListAdapter$2 -> com.mars.note.e:
    com.mars.note.BackUpAndRestore$BackupListAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
    com.mars.note.BackUpAndRestore$BackupListAdapter access$0(com.mars.note.BackUpAndRestore$BackupListAdapter$2) -> a
com.mars.note.BackUpAndRestore$BackupListAdapter$2$1 -> com.mars.note.f:
    com.mars.note.BackUpAndRestore$BackupListAdapter$2 this$2 -> a
    com.mars.note.BackupDoc val$f -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.BackupDoc -> com.mars.note.g:
    java.lang.String path -> a
    java.lang.String fileName -> b
com.mars.note.Config -> com.mars.note.h:
    boolean calendar_needRefresh -> a
    boolean recent_needRefresh -> b
    boolean search_needRefresh -> c
    int current_theme -> d
    int contentPagerScrollState -> e
    boolean loadmore_sync -> f
    int maxShownCount -> g
    boolean animation_finished -> h
com.mars.note.CrashHandler -> com.mars.note.i:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> b
    com.mars.note.CrashHandler INSTANCE -> c
    android.content.Context mContext -> d
    java.util.Map infos -> e
    java.lang.String BACKUP_PATH -> a
    java.text.DateFormat formatter -> f
    com.mars.note.CrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void collectDeviceInfo(android.content.Context) -> b
    java.lang.String saveCrashInfo2File(java.lang.Throwable) -> b
    android.content.Context access$0(com.mars.note.CrashHandler) -> a
com.mars.note.CrashHandler$1 -> com.mars.note.j:
    com.mars.note.CrashHandler this$0 -> a
    void run() -> run
com.mars.note.Editor -> com.mars.note.Editor:
    java.util.Calendar calendar -> b
    long recordTime -> c
    android.widget.EditText titleText -> d
    com.mars.note.views.NoteContentEditText contentText -> e
    android.view.View imgContainer -> f
    android.widget.ImageView mImageView -> g
    android.util.DisplayMetrics dm -> h
    java.lang.String note_id -> i
    com.mars.note.database.NoteDataBaseManager noteDBManager -> j
    com.mars.note.database.NoteRecord mNoteRecord -> k
    boolean isPastNote -> l
    java.lang.String imagePath -> m
    java.lang.String cameraIMGPath -> n
    android.app.ActionBar actionBar -> o
    android.widget.ProgressBar mProgressBar -> p
    android.widget.TextView contenTitle -> q
    boolean isAddFromCalendar -> a
    android.view.View overflow_menu -> r
    android.view.View cameraOrGallery_menu -> s
    android.widget.PopupWindow overflow_menu_pw -> t
    android.widget.PopupWindow cameraOrGallery_menu_pw -> u
    android.widget.Button changeDate -> v
    android.widget.Button deleteSingle -> w
    android.widget.Button shareWithOthers -> x
    android.widget.Button camera -> y
    android.widget.Button gallery -> z
    int imgPadding -> A
    int appWidgetId -> B
    boolean isRelatedToWidget -> C
    boolean isAddedWidgetRelation -> D
    android.content.Intent mIntent -> E
    android.view.inputmethod.InputMethodManager imm -> F
    void onCreate(android.os.Bundle) -> onCreate
    void initPopupWindow() -> a
    void refresh() -> b
    void onNewIntent(android.content.Intent) -> onNewIntent
    void reset() -> c
    void validate() -> d
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void initActionBar() -> e
    void initContent() -> f
    void setImageView(android.graphics.Bitmap) -> a
    void setImageView(java.lang.String) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void canBeSavedInDB() -> g
    void saveToDB() -> h
    void exit() -> i
    void onBackPressed() -> onBackPressed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void clearIMG() -> j
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.String getdayOfWeek(int) -> a
    android.widget.TextView access$0(com.mars.note.Editor) -> a
    java.lang.String access$1(com.mars.note.Editor) -> b
    android.util.DisplayMetrics access$2(com.mars.note.Editor) -> c
    void access$3(com.mars.note.Editor,android.util.DisplayMetrics) -> a
    int access$4(com.mars.note.Editor) -> d
    android.widget.ProgressBar access$5(com.mars.note.Editor) -> e
    void access$6(com.mars.note.Editor,android.graphics.Bitmap) -> a
    android.widget.ImageView access$7(com.mars.note.Editor) -> f
    java.util.Calendar access$8(com.mars.note.Editor) -> g
    void access$9(com.mars.note.Editor,long) -> a
    java.lang.String access$10(com.mars.note.Editor,int) -> a
    android.app.ActionBar access$11(com.mars.note.Editor) -> h
    android.widget.PopupWindow access$12(com.mars.note.Editor) -> i
    com.mars.note.database.NoteDataBaseManager access$13(com.mars.note.Editor) -> j
    com.mars.note.database.NoteRecord access$14(com.mars.note.Editor) -> k
com.mars.note.Editor$1 -> com.mars.note.k:
    com.mars.note.Editor this$0 -> a
    void onClick(android.view.View) -> onClick
com.mars.note.Editor$2 -> com.mars.note.l:
    float screenWidth -> a
    android.graphics.Bitmap bm -> b
    com.mars.note.Editor this$0 -> c
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.mars.note.Editor$3 -> com.mars.note.m:
    com.mars.note.Editor this$0 -> a
    android.widget.DatePicker val$mDatePicker -> b
    com.mars.note.views.DataAlterDialog val$mChangeDateDialog -> c
    void onClick(android.view.View) -> onClick
com.mars.note.Editor$4 -> com.mars.note.n:
    com.mars.note.Editor this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.Editor$EditTextWatcher -> com.mars.note.o:
    int maxLen -> b
    android.widget.EditText editText -> c
    com.mars.note.Editor this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.mars.note.FragmentCallBack -> com.mars.note.p:
    void switchFragment(int) -> a
    void openDrawer() -> a_
com.mars.note.Logg -> com.mars.note.q:
    void D(java.lang.String) -> a
com.mars.note.LoginActivity -> com.mars.note.LoginActivity:
    com.mars.note.views.GestureLockView view -> a
    android.widget.TextView attention -> b
    java.lang.String pass1 -> c
    java.lang.String pass2 -> d
    android.content.SharedPreferences shares -> e
    int mode -> f
    void onCreate(android.os.Bundle) -> onCreate
    void OnGestureFinish(boolean,java.lang.String) -> a
com.mars.note.Main -> com.mars.note.Main:
    com.jfeinstein.jazzyviewpager.JazzyViewPager mViewPager -> o
    android.support.v4.app.FragmentPagerAdapter adapter -> p
    android.support.v4.app.FragmentManager mFragmentManager -> q
    com.mars.note.fragment.RecentRecordsFragment mRecentRecordsFragment -> r
    com.mars.note.fragment.CalendarFragment mCalendarFragment -> s
    com.mars.note.fragment.SearchFragment mSearchFragment -> t
    int previousFragment -> n
    com.mars.note.Main$ViewPagerScroller scroller -> u
    java.lang.reflect.Field mScroller -> v
    android.support.v4.widget.DrawerLayout mDrawerLayout -> w
    boolean isSwitchFragment -> x
    int changeTo -> y
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    void validate() -> f
    void initDrawerMenu() -> g
    void toChangeFragment(android.view.View) -> toChangeFragment
    void onStart() -> onStart
    void initFragments() -> h
    void onBackPressed() -> onBackPressed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPause() -> onPause
    void onStop() -> onStop
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void addNewNote(android.view.View) -> addNewNote
    void switchFragment(int) -> a
    void onDestroy() -> onDestroy
    void onRestart() -> onRestart
    void openDrawer() -> a_
    com.jfeinstein.jazzyviewpager.JazzyViewPager access$0(com.mars.note.Main) -> a
    com.mars.note.fragment.SearchFragment access$1(com.mars.note.Main) -> b
    com.mars.note.fragment.RecentRecordsFragment access$2(com.mars.note.Main) -> c
    com.mars.note.fragment.CalendarFragment access$3(com.mars.note.Main) -> d
    boolean access$4(com.mars.note.Main) -> e
    void access$5(com.mars.note.Main,boolean) -> a
    int access$6(com.mars.note.Main) -> f
com.mars.note.Main$1 -> com.mars.note.r:
    com.mars.note.Main this$0 -> a
    void onDrawerStateChanged(int) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
com.mars.note.Main$MyFragmentAdapter -> com.mars.note.s:
    com.mars.note.Main this$0 -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.mars.note.Main$ViewPagerScroller -> com.mars.note.t:
    int mScrollDuration -> b
    com.mars.note.Main this$0 -> a
    void startScroll(int,int,int,int,int) -> startScroll
    void startScroll(int,int,int,int) -> startScroll
    void setScrollDuration(int) -> a
com.mars.note.NoteApplication -> com.mars.note.NoteApplication:
    com.mars.note.database.NoteDataBaseManager dbManager -> a
    android.support.v4.util.LruCache mBitmapCache -> b
    java.util.ArrayList mGridViewBatchDeleteCache -> c
    java.util.concurrent.ExecutorService executors -> d
    java.util.concurrent.ExecutorService getExecutors() -> a
    void setExecutors(java.util.concurrent.ExecutorService) -> a
    void setGridViewBatchDeleteCache(java.util.ArrayList) -> a
    java.util.ArrayList getmGridViewBatchDeleteCache() -> b
    void closeDB() -> c
    com.mars.note.database.NoteDataBaseManager getDbManager() -> d
    void onLowMemory() -> onLowMemory
    android.support.v4.util.LruCache getBitmapCache() -> e
    void clearBitmapCache() -> f
    void initBitmapCache() -> g
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
com.mars.note.NoteApplication$1 -> com.mars.note.u:
    com.mars.note.NoteApplication this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
com.mars.note.NoteSettings -> com.mars.note.NoteSettings:
    android.app.ActionBar mActionBar -> a
    android.app.FragmentManager mFragmentManager -> b
    android.app.FragmentTransaction mFragmentTransaction -> c
    com.mars.note.fragment.NoteSettingsMenu mNoteSettingsMenu -> d
    com.mars.note.BackUpAndRestore mBackUpAndRestore -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onBackPressed() -> onBackPressed
com.mars.note.R -> com.mars.note.v:
com.mars.note.R$styleable -> com.mars.note.w:
    int[] JazzyViewPager -> JazzyViewPager
    int JazzyViewPager_fadeEnabled -> JazzyViewPager_fadeEnabled
    int JazzyViewPager_outlineColor -> JazzyViewPager_outlineColor
    int JazzyViewPager_outlineEnabled -> JazzyViewPager_outlineEnabled
    int JazzyViewPager_style -> JazzyViewPager_style
    int[] NoteCalendar -> NoteCalendar
    int NoteCalendar_backgroundColor -> NoteCalendar_backgroundColor
    int[] StaggeredGridView -> StaggeredGridView
    int StaggeredGridView_drawSelectorOnTop -> StaggeredGridView_drawSelectorOnTop
    int StaggeredGridView_numColumns -> StaggeredGridView_numColumns
com.mars.note.ThemeSettings -> com.mars.note.ThemeSettings:
    java.lang.String TAG -> a
    android.app.Activity mActivity -> b
    com.mars.note.views.BounceViewPager mViewPager -> c
    android.support.v4.view.PagerAdapter adpater -> d
    android.view.View[] themeViews -> e
    android.view.LayoutInflater inflater -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initThemes() -> a
    void onResume() -> onResume
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
com.mars.note.ThemeSettings$1 -> com.mars.note.x:
    com.mars.note.ThemeSettings this$0 -> a
    int val$id -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.ThemeSettings$MyPagerAdapter -> com.mars.note.y:
    com.mars.note.ThemeSettings this$0 -> a
    int getCount() -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
com.mars.note.database.NoteDataBaseManager -> com.mars.note.a.a:
    com.mars.note.database.NoteDatabaseHelper mRecordsDBHelper -> a
    android.database.sqlite.SQLiteDatabase db -> b
    android.content.Context mContext -> c
    android.database.Cursor getCursor(java.lang.String) -> h
    void closeDB() -> a
    void clearWidgetsRelations() -> b
    void addRecords(java.util.List) -> a
    void addWidgetRelation(java.lang.String,java.lang.String) -> a
    void deleteWidgetRelation(java.lang.String) -> a
    java.lang.String queryWidgetIDByNoteID(java.lang.String) -> b
    java.lang.String querySingleRecordIDByWidgetID(java.lang.String) -> c
    java.lang.String querySingleRecordIDByTime(java.lang.String) -> d
    long addRecord(com.mars.note.database.NoteRecord) -> a
    int[] getCurrentMonthRecordCount(int,int,int) -> a
    java.util.List querySelectedRecords(int,int,int) -> b
    java.util.List queryDividedPagerRecords(int,int,int) -> c
    int getMaxRecordsCount() -> c
    int getDayRecordCount(int,int,int) -> d
    java.util.List queryAllRecords() -> d
    com.mars.note.database.NoteRecord querySingleRecord(java.lang.String) -> e
    void deleteRecord(java.lang.String) -> f
    void refreshWidgetCollections() -> e
    void batchDeleteRecord(java.util.List) -> b
    void updateRecord(com.mars.note.database.NoteRecord) -> b
    java.util.List querySelectedRecords(java.lang.String) -> g
com.mars.note.database.NoteDatabaseHelper -> com.mars.note.a.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.mars.note.database.NoteRecord -> com.mars.note.a.c:
    java.lang.String title -> a
    java.lang.String content -> b
    java.lang.String id -> c
    java.lang.String time -> d
    java.lang.String year -> e
    java.lang.String month -> f
    java.lang.String day -> g
    java.lang.String hour -> h
    java.lang.String minute -> i
    java.lang.String second -> j
    java.lang.String imgpath -> k
com.mars.note.fragment.CalendarFragment -> com.mars.note.b.a:
    android.app.Activity mActivity -> Q
    com.mars.note.database.NoteDataBaseManager noteDBManager -> R
    android.widget.TextView index_of_data -> S
    android.widget.TextView calendar_title -> T
    android.widget.TextView emptyContent -> U
    android.widget.ImageButton add_new_note -> V
    com.mars.note.views.BounceViewPager mViewPager -> W
    android.support.v4.app.FragmentStatePagerAdapter mViewPagerAdapter -> X
    java.lang.String[] dateTitle -> Y
    com.mars.note.views.BounceViewPager mContentPager -> Z
    android.support.v4.view.PagerAdapter mContentAdapter -> aa
    java.util.List selected_day_datalist -> ab
    android.support.v4.util.LruCache mBitmapCache -> ac
    android.widget.ProgressBar mProgressBar -> ad
    int single_delete_position -> ae
    java.lang.String[] date_title -> af
    java.lang.String[] time_title -> ag
    android.widget.PopupWindow pop -> ah
    int calendar_year -> ai
    int calendar_month -> aj
    int calendar_selected_year -> ak
    int calendar_selected_month -> al
    int calendar_selected_day -> am
    int viewPagerIndex -> an
    boolean sync -> ao
    boolean isMainThreadAlive -> P
    android.view.View root -> ap
    com.mars.note.FragmentCallBack mCallBack -> aq
    android.view.View$OnLongClickListener mOnLongClickListener -> ar
    void onAttach(android.app.Activity) -> a
    void setCallBack(com.mars.note.FragmentCallBack) -> a
    void onCreate(android.os.Bundle) -> d
    void onStart() -> j
    void initDBManager() -> E
    void initListener() -> F
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void initContentPager(android.view.View) -> a
    void onResume() -> k
    void refreshSelectedDayData() -> B
    void onClick(android.view.View) -> onClick
    void deleteSingleRecord() -> C
    void addNewNote(android.view.View) -> addNewNote
    void onDestroy() -> o
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a_
    void onChangeSelectedDate(int,int,int) -> a
    void onStop() -> m
    void onPause() -> l
    void onDestroyView() -> n
    void access$0(com.mars.note.fragment.CalendarFragment,int) -> a
    void access$1(com.mars.note.fragment.CalendarFragment,boolean) -> a
    boolean access$2(com.mars.note.fragment.CalendarFragment) -> a
    void access$3(com.mars.note.fragment.CalendarFragment,android.support.v4.app.FragmentStatePagerAdapter) -> a
    com.mars.note.views.BounceViewPager access$4(com.mars.note.fragment.CalendarFragment) -> b
    android.support.v4.app.FragmentStatePagerAdapter access$5(com.mars.note.fragment.CalendarFragment) -> c
    int access$6(com.mars.note.fragment.CalendarFragment) -> d
    android.widget.TextView access$7(com.mars.note.fragment.CalendarFragment) -> e
    int access$8(com.mars.note.fragment.CalendarFragment) -> f
    java.lang.String[] access$9(com.mars.note.fragment.CalendarFragment) -> g
    int access$10(com.mars.note.fragment.CalendarFragment) -> h
    java.util.List access$11(com.mars.note.fragment.CalendarFragment) -> i
    com.mars.note.database.NoteDataBaseManager access$12(com.mars.note.fragment.CalendarFragment) -> j
    int access$13(com.mars.note.fragment.CalendarFragment) -> k
    int access$14(com.mars.note.fragment.CalendarFragment) -> l
    int access$15(com.mars.note.fragment.CalendarFragment) -> m
    void access$16(com.mars.note.fragment.CalendarFragment,java.util.List) -> a
    android.widget.TextView access$17(com.mars.note.fragment.CalendarFragment) -> n
    android.widget.ImageButton access$18(com.mars.note.fragment.CalendarFragment) -> o
    com.mars.note.views.BounceViewPager access$19(com.mars.note.fragment.CalendarFragment) -> p
    android.widget.TextView access$20(com.mars.note.fragment.CalendarFragment) -> q
    android.app.Activity access$21(com.mars.note.fragment.CalendarFragment) -> r
    void access$22(com.mars.note.fragment.CalendarFragment,android.support.v4.view.PagerAdapter) -> a
    android.support.v4.view.PagerAdapter access$23(com.mars.note.fragment.CalendarFragment) -> s
    android.view.View$OnLongClickListener access$24(com.mars.note.fragment.CalendarFragment) -> t
    android.support.v4.util.LruCache access$25() -> D
    java.lang.String[] access$26(com.mars.note.fragment.CalendarFragment) -> u
    java.lang.String[] access$27(com.mars.note.fragment.CalendarFragment) -> v
    void access$28(com.mars.note.fragment.CalendarFragment,int) -> b
    void access$29(com.mars.note.fragment.CalendarFragment,int) -> c
    void access$30(com.mars.note.fragment.CalendarFragment,int) -> d
com.mars.note.fragment.CalendarFragment$1 -> com.mars.note.b.b:
    com.mars.note.fragment.CalendarFragment this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.mars.note.fragment.CalendarFragment$2 -> com.mars.note.b.c:
    com.mars.note.fragment.CalendarFragment this$0 -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a_
com.mars.note.fragment.CalendarFragment$3 -> com.mars.note.b.d:
    com.mars.note.fragment.CalendarFragment this$0 -> a
    android.widget.DatePicker val$mDatePicker -> b
    com.mars.note.views.DataAlterDialog val$mChangeDateDialog -> c
    void onClick(android.view.View) -> onClick
com.mars.note.fragment.CalendarFragment$4 -> com.mars.note.b.e:
    com.mars.note.fragment.CalendarFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.fragment.CalendarFragment$CalendarPagerAdapter -> com.mars.note.b.f:
    boolean sync -> b
    com.mars.note.fragment.CalendarFragment this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.mars.note.fragment.CalendarFragment$ContentAdapter -> com.mars.note.b.g:
    java.util.List datalist -> a
    android.view.LayoutInflater mInflater -> c
    com.mars.note.fragment.CalendarFragment this$0 -> b
    int getCount() -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    java.lang.String getdayOfWeek(int) -> a
com.mars.note.fragment.CalendarFragment$ListItemImg -> com.mars.note.b.h:
    int position -> a
    android.graphics.Bitmap bm -> b
    com.mars.note.fragment.CalendarFragment this$0 -> c
com.mars.note.fragment.CalendarFragment$LoadSingleImageTask -> com.mars.note.b.i:
    java.lang.String path -> a
    android.graphics.Bitmap bm -> b
    android.widget.ImageView imageView -> c
    com.mars.note.fragment.CalendarFragment$ListItemImg item -> d
    com.mars.note.fragment.CalendarFragment this$0 -> e
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mars.note.fragment.CalendarFragment$refreshContentPagerTask -> com.mars.note.b.j:
    com.mars.note.fragment.CalendarFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mars.note.fragment.CalendarItem -> com.mars.note.b.k:
    android.app.Activity mActivity -> Y
    int pos -> P
    com.mars.note.views.NoteCalendar calendarView -> Q
    int calendar_year -> R
    int calendar_month -> S
    int calendar_selected_year -> T
    int calendar_selected_month -> U
    int calendar_selected_day -> V
    boolean sync -> W
    com.mars.note.fragment.CalendarItem$CallBack mCallBack -> X
    void setCalendarCallBack(com.mars.note.fragment.CalendarItem$CallBack) -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> k
    void onDestroy() -> o
    void onChangeSelectedDate(int,int,int) -> a
com.mars.note.fragment.CalendarItem$CallBack -> com.mars.note.b.l:
    void onChangeSelectedDate(int,int,int) -> a
com.mars.note.fragment.GridPaperItemImg -> com.mars.note.b.m:
    int index -> a
    int position -> b
    android.graphics.Bitmap bm -> c
com.mars.note.fragment.GridViewPaperItem -> com.mars.note.b.n:
    android.app.Activity mActivity -> X
    com.mars.note.database.NoteDataBaseManager noteDBManager -> P
    int index -> Q
    com.mars.note.views.MyGridView gridView -> R
    android.widget.TextView indexText -> S
    android.widget.BaseAdapter mAdapter -> T
    java.util.List list_note_data -> U
    java.util.concurrent.ExecutorService executors -> Y
    android.support.v4.util.LruCache mBitmapCache -> V
    java.util.ArrayList mGridViewBatchDeleteCache -> Z
    com.mars.note.fragment.GridViewPaperItem$CallBack mCallBack -> W
    void setCallBack(com.mars.note.fragment.GridViewPaperItem$CallBack) -> a
    void setBitmapCache() -> B
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> d
    void initDBManager() -> D
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> k
    void onDestroy() -> o
    android.app.Activity access$0(com.mars.note.fragment.GridViewPaperItem) -> a
    java.util.ArrayList access$1() -> C
    java.util.concurrent.ExecutorService access$2(com.mars.note.fragment.GridViewPaperItem) -> b
com.mars.note.fragment.GridViewPaperItem$1 -> com.mars.note.b.o:
    android.view.LayoutInflater inflate -> a
    java.lang.String[] date_title -> b
    com.mars.note.fragment.GridViewPaperItem this$0 -> c
    int getCount() -> getCount
    com.mars.note.database.NoteRecord getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    com.mars.note.fragment.GridViewPaperItem access$1(com.mars.note.fragment.GridViewPaperItem$1) -> a
com.mars.note.fragment.GridViewPaperItem$1$1 -> com.mars.note.b.p:
    com.mars.note.fragment.GridViewPaperItem$1 this$1 -> a
    android.view.View val$bg -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.mars.note.fragment.GridViewPaperItem$1$2 -> com.mars.note.b.q:
    com.mars.note.fragment.GridViewPaperItem$1 this$1 -> a
    android.view.View val$bg -> b
    com.mars.note.database.NoteRecord val$nr -> c
    void onClick(android.view.View) -> onClick
com.mars.note.fragment.GridViewPaperItem$1$3 -> com.mars.note.b.r:
    com.mars.note.fragment.GridViewPaperItem$1 this$1 -> a
    android.widget.ImageView val$img -> b
    com.mars.note.fragment.GridPaperItemImg val$item -> c
    void handleMessage(android.os.Message) -> handleMessage
com.mars.note.fragment.GridViewPaperItem$1$4 -> com.mars.note.b.s:
    com.mars.note.fragment.GridViewPaperItem$1 this$1 -> a
    java.lang.String val$path -> b
    com.mars.note.fragment.GridPaperItemImg val$item -> c
    android.os.Handler val$handler -> d
    void run() -> run
com.mars.note.fragment.GridViewPaperItem$1$ViewHolder -> com.mars.note.b.t:
    boolean firstLoad -> a
    int position -> b
    android.widget.TextView date -> c
    android.widget.TextView title -> d
    android.widget.TextView content -> e
    android.widget.ImageView img -> f
    com.mars.note.fragment.GridViewPaperItem$1 this$1 -> g
com.mars.note.fragment.GridViewPaperItem$CallBack -> com.mars.note.b.u:
    void showDeleteUI() -> b_
com.mars.note.fragment.GridViewPaperItemForBatchDelete -> com.mars.note.b.v:
    int index -> a
    int position -> b
    boolean checked -> c
    java.lang.String id -> d
com.mars.note.fragment.NoteSettingsMenu -> com.mars.note.b.w:
    android.app.Activity mActivity -> a
    com.mars.note.views.BounceListView mSettingsListView -> b
    android.widget.BaseAdapter mAdapter -> c
    android.view.View$OnClickListener mOnClickListener -> d
    com.mars.note.database.NoteDataBaseManager noteDBManager -> e
    java.util.List records -> f
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void importXMLChooser() -> a
    void exportXMLDialog() -> c
    void getDataList() -> b
    void exportXML(java.lang.String) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void importXML(java.io.InputStream) -> a
    void access$0(com.mars.note.fragment.NoteSettingsMenu) -> a
    void access$1(com.mars.note.fragment.NoteSettingsMenu,java.io.InputStream) -> a
com.mars.note.fragment.NoteSettingsMenu$1 -> com.mars.note.b.x:
    com.mars.note.fragment.NoteSettingsMenu this$0 -> a
    void onClick(android.view.View) -> onClick
com.mars.note.fragment.NoteSettingsMenu$2 -> com.mars.note.b.y:
    android.view.LayoutInflater mInflater -> a
    com.mars.note.fragment.NoteSettingsMenu this$0 -> b
    java.lang.String[] val$settings_titles -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.mars.note.fragment.NoteSettingsMenu access$0(com.mars.note.fragment.NoteSettingsMenu$2) -> a
com.mars.note.fragment.NoteSettingsMenu$2$1 -> com.mars.note.b.z:
    com.mars.note.fragment.NoteSettingsMenu$2 this$1 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.mars.note.fragment.NoteSettingsMenu$3 -> com.mars.note.b.aa:
    com.mars.note.fragment.NoteSettingsMenu this$0 -> a
    java.lang.String val$fileName -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.fragment.NoteSettingsMenu$4 -> com.mars.note.b.ab:
    com.mars.note.fragment.NoteSettingsMenu this$0 -> a
    java.lang.String val$filePath -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.fragment.RecentRecordsFragment -> com.mars.note.b.ac:
    android.app.Activity mActivity -> R
    android.widget.ImageButton titlebar_add_note_btn -> S
    android.widget.ImageButton titlebar_overflow_options -> T
    android.widget.ImageButton titlebar_batch_delete_imgbtn -> U
    android.widget.ImageButton bottom_batch_delete_btn -> V
    android.view.View bottom_layout -> W
    android.widget.CheckBox select_all_checkbox -> X
    com.mars.note.views.BounceListView listView_myNote -> Y
    android.widget.TextView textview_empty -> Z
    android.widget.ProgressBar mProgressBar -> aa
    com.jfeinstein.jazzyviewpager.JazzyViewPager mGridPager -> ab
    android.widget.CompoundButton$OnCheckedChangeListener mNoteCheckBoxListener -> ac
    android.view.View$OnClickListener mOnClickListener -> ad
    com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter noteAdapter -> ae
    com.mars.note.database.NoteDataBaseManager noteDBManager -> af
    java.util.List list_note_data -> P
    java.util.ArrayList item_checkbox_status -> ag
    android.support.v4.util.LruCache mBitmapCache -> ah
    int single_delete_position -> ai
    java.lang.Boolean isDeleteUIShown -> Q
    int currentPage -> aj
    int records_count -> ak
    boolean isLoadMoreModel -> al
    android.app.ProgressDialog mExecutingDialog -> am
    boolean isFirstLoaded -> an
    android.widget.PopupWindow pop -> ao
    android.view.View popView -> ap
    android.view.View root -> aq
    java.lang.String[] date_title -> ar
    java.lang.String[] time_title -> as
    com.mars.note.FragmentCallBack mCallBack -> at
    boolean flag -> au
    boolean delayToRefresh -> av
    java.util.concurrent.ExecutorService executors -> aw
    android.support.v4.app.FragmentStatePagerAdapter mGridPagerAdapter -> ax
    java.util.ArrayList mGridViewBatchDeleteCache -> ay
    int screenHeight -> az
    int screenWidth -> aA
    float DPI -> aB
    boolean firstResume -> aC
    void setCallBack(com.mars.note.FragmentCallBack) -> a
    void onAttach(android.app.Activity) -> a
    void onDetach() -> q
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void initGridPaper(android.view.View) -> a
    void bindListener() -> J
    void initDBManager() -> K
    void initExecutingDialog() -> L
    void initTitleBarView(android.view.View) -> b
    void initListener() -> M
    void openSettingsActivity() -> B
    void startEditor(android.content.Intent) -> a
    void initAutoRefreshListView(android.view.View) -> c
    void initEmptyView(android.view.View) -> d
    void onActivityCreated(android.os.Bundle) -> e
    void onStart() -> j
    void setGridPaper() -> N
    void setEffect(int) -> b
    void setListView() -> O
    void titleBarIn() -> P
    void onResume() -> k
    void onPause() -> l
    void onStop() -> m
    void onDestroyView() -> n
    void onDestroy() -> o
    void showBatchDeleteUI() -> C
    void cancelShowBatchDeleteUI() -> D
    void updateListItemCheckBoxStatus(int,boolean) -> a
    void batchDeleteNote() -> E
    void showExectingDialog() -> Q
    void dissmissExecutingDialog() -> R
    boolean onBackPressed() -> F
    void deleteSingleRecord() -> G
    java.lang.String getdayOfWeek(int) -> c
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void showDeleteUI() -> b_
    void runDrawerAnim(float) -> a
    void access$0(com.mars.note.fragment.RecentRecordsFragment,int) -> a
    com.mars.note.database.NoteDataBaseManager access$1(com.mars.note.fragment.RecentRecordsFragment) -> a
    int access$2(com.mars.note.fragment.RecentRecordsFragment) -> b
    void access$3(com.mars.note.fragment.RecentRecordsFragment) -> c
    void access$4(com.mars.note.fragment.RecentRecordsFragment) -> d
    android.widget.ProgressBar access$5(com.mars.note.fragment.RecentRecordsFragment) -> e
    void access$6(com.mars.note.fragment.RecentRecordsFragment,boolean) -> a
    void access$7(com.mars.note.fragment.RecentRecordsFragment,boolean) -> b
    java.util.ArrayList access$8(com.mars.note.fragment.RecentRecordsFragment) -> f
    android.support.v4.util.LruCache access$9() -> H
    android.app.Activity access$10(com.mars.note.fragment.RecentRecordsFragment) -> g
    java.util.concurrent.ExecutorService access$11() -> I
    java.lang.String[] access$12(com.mars.note.fragment.RecentRecordsFragment) -> h
    java.lang.String[] access$13(com.mars.note.fragment.RecentRecordsFragment) -> i
    java.lang.String access$14(com.mars.note.fragment.RecentRecordsFragment,int) -> b
    android.widget.CompoundButton$OnCheckedChangeListener access$15(com.mars.note.fragment.RecentRecordsFragment) -> j
    void access$16(com.mars.note.fragment.RecentRecordsFragment,int,boolean) -> a
    void access$17(com.mars.note.fragment.RecentRecordsFragment,android.content.Intent) -> a
    com.jfeinstein.jazzyviewpager.JazzyViewPager access$18(com.mars.note.fragment.RecentRecordsFragment) -> k
    int access$19(com.mars.note.fragment.RecentRecordsFragment) -> l
    void access$20(com.mars.note.fragment.RecentRecordsFragment) -> m
    com.mars.note.views.BounceListView access$21(com.mars.note.fragment.RecentRecordsFragment) -> n
    android.widget.ImageButton access$22(com.mars.note.fragment.RecentRecordsFragment) -> o
    java.util.ArrayList access$23(com.mars.note.fragment.RecentRecordsFragment) -> p
    com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter access$24(com.mars.note.fragment.RecentRecordsFragment) -> q
    android.support.v4.app.FragmentStatePagerAdapter access$25(com.mars.note.fragment.RecentRecordsFragment) -> r
    com.mars.note.FragmentCallBack access$26(com.mars.note.fragment.RecentRecordsFragment) -> s
    android.widget.PopupWindow access$27(com.mars.note.fragment.RecentRecordsFragment) -> t
    void access$28(com.mars.note.fragment.RecentRecordsFragment) -> u
com.mars.note.fragment.RecentRecordsFragment$1 -> com.mars.note.b.ad:
    com.mars.note.fragment.RecentRecordsFragment this$0 -> a
    void onDismiss() -> onDismiss
com.mars.note.fragment.RecentRecordsFragment$2 -> com.mars.note.b.ae:
    com.mars.note.fragment.RecentRecordsFragment this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.mars.note.fragment.RecentRecordsFragment$3 -> com.mars.note.b.af:
    com.mars.note.fragment.RecentRecordsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.mars.note.fragment.RecentRecordsFragment access$0(com.mars.note.fragment.RecentRecordsFragment$3) -> a
com.mars.note.fragment.RecentRecordsFragment$3$1 -> com.mars.note.b.ag:
    com.mars.note.fragment.RecentRecordsFragment$3 this$1 -> a
    android.content.Intent val$addNote -> b
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.mars.note.fragment.RecentRecordsFragment$4 -> com.mars.note.b.ah:
    com.mars.note.fragment.RecentRecordsFragment this$0 -> a
    void onPageSelected(int) -> a_
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
com.mars.note.fragment.RecentRecordsFragment$5 -> com.mars.note.b.ai:
    com.mars.note.fragment.RecentRecordsFragment this$0 -> a
    java.util.List val$deleteList -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.fragment.RecentRecordsFragment$BatchDeleteTask -> com.mars.note.b.aj:
    java.util.List mList -> a
    com.mars.note.fragment.RecentRecordsFragment this$0 -> b
    java.lang.String doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mars.note.fragment.RecentRecordsFragment$GridPaperAdapter -> com.mars.note.b.ak:
    com.mars.note.fragment.RecentRecordsFragment this$0 -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.mars.note.fragment.RecentRecordsFragment$ListItemCheckBoxStatus -> com.mars.note.b.al:
    int positon -> a
    boolean onChecked -> b
    com.mars.note.fragment.RecentRecordsFragment this$0 -> c
com.mars.note.fragment.RecentRecordsFragment$ListItemImg -> com.mars.note.b.am:
    int position -> a
    android.graphics.Bitmap bm -> b
    com.mars.note.fragment.RecentRecordsFragment this$0 -> c
com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter -> com.mars.note.b.an:
    android.content.Context mContext -> a
    android.view.LayoutInflater inflate -> b
    java.util.List mData -> c
    com.mars.note.fragment.RecentRecordsFragment this$0 -> d
    boolean isEnabled(int) -> isEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    com.mars.note.fragment.RecentRecordsFragment access$0(com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter) -> a
com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter$1 -> com.mars.note.b.ao:
    com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter this$1 -> a
    android.widget.ImageView val$img -> b
    com.mars.note.fragment.RecentRecordsFragment$ListItemImg val$item -> c
    void handleMessage(android.os.Message) -> handleMessage
com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter$2 -> com.mars.note.b.ap:
    com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter this$1 -> a
    java.lang.String val$path -> b
    com.mars.note.fragment.RecentRecordsFragment$ListItemImg val$item -> c
    android.os.Handler val$handler -> d
    void run() -> run
com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter$3 -> com.mars.note.b.aq:
    com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter this$1 -> a
    android.widget.CheckBox val$cb -> b
    com.mars.note.database.NoteRecord val$nr -> c
    void onClick(android.view.View) -> onClick
com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter$4 -> com.mars.note.b.ar:
    com.mars.note.fragment.RecentRecordsFragment$NoteListAdapter this$1 -> a
    android.widget.CheckBox val$cb -> b
    int val$pos -> c
    boolean onLongClick(android.view.View) -> onLongClick
com.mars.note.fragment.RecentRecordsFragment$RefreshViewsTask -> com.mars.note.b.as:
    com.mars.note.fragment.RecentRecordsFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mars.note.fragment.RecentRecordsFragment$ViewHolder -> com.mars.note.b.at:
    int position -> a
    android.widget.TextView date -> b
    android.widget.TextView time -> c
    android.widget.TextView title -> d
    android.widget.TextView content -> e
    android.view.ViewGroup titleAndContent -> f
    android.widget.ImageView img -> g
    android.widget.CheckBox mCheckBox -> h
    com.mars.note.fragment.RecentRecordsFragment this$0 -> i
com.mars.note.fragment.RecentRecordsFragment$ViewPagerScroller -> com.mars.note.b.au:
    int mScrollDuration -> b
    com.mars.note.fragment.RecentRecordsFragment this$0 -> a
    void startScroll(int,int,int,int,int) -> startScroll
    void startScroll(int,int,int,int) -> startScroll
    void setScrollDuration(int) -> a
com.mars.note.fragment.SearchFragment -> com.mars.note.b.av:
    android.app.Activity mActivity -> R
    com.mars.note.database.NoteDataBaseManager noteDBManager -> S
    android.widget.SearchView mSearchView -> T
    android.widget.TextView txt -> U
    android.widget.ListView searchList -> V
    android.widget.BaseAdapter searchListAdapter -> W
    java.util.List result_list -> X
    java.lang.String[] date_title -> Y
    java.lang.String[] time_title -> Z
    boolean isAddNoteReturn -> P
    java.lang.String query -> aa
    android.support.v4.util.LruCache mBitmapCache -> ab
    java.util.concurrent.ExecutorService executors -> ac
    android.view.View root -> ad
    com.mars.note.FragmentCallBack mCallBack -> Q
    void onAttach(android.app.Activity) -> a
    void setCallBack(com.mars.note.FragmentCallBack) -> a
    void onCreate(android.os.Bundle) -> d
    void initDBManager() -> C
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> k
    void onDestroy() -> o
    void onClick(android.view.View) -> onClick
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    void refreshListView() -> D
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    android.support.v4.util.LruCache access$0() -> B
    android.app.Activity access$1(com.mars.note.fragment.SearchFragment) -> a
    java.util.concurrent.ExecutorService access$2(com.mars.note.fragment.SearchFragment) -> b
    java.lang.String[] access$3(com.mars.note.fragment.SearchFragment) -> c
    java.lang.String[] access$4(com.mars.note.fragment.SearchFragment) -> d
com.mars.note.fragment.SearchFragment$ListItemImg -> com.mars.note.b.aw:
    int position -> a
    android.graphics.Bitmap bm -> b
    com.mars.note.fragment.SearchFragment this$0 -> c
com.mars.note.fragment.SearchFragment$SearchListAdapter -> com.mars.note.b.ax:
    android.view.LayoutInflater inflater -> a
    java.util.List list -> b
    com.mars.note.fragment.SearchFragment this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String getdayOfWeek(int) -> a
    com.mars.note.fragment.SearchFragment access$0(com.mars.note.fragment.SearchFragment$SearchListAdapter) -> a
com.mars.note.fragment.SearchFragment$SearchListAdapter$1 -> com.mars.note.b.ay:
    com.mars.note.fragment.SearchFragment$SearchListAdapter this$1 -> a
    android.widget.ImageView val$img -> b
    com.mars.note.fragment.SearchFragment$ListItemImg val$item -> c
    void handleMessage(android.os.Message) -> handleMessage
com.mars.note.fragment.SearchFragment$SearchListAdapter$2 -> com.mars.note.b.az:
    com.mars.note.fragment.SearchFragment$SearchListAdapter this$1 -> a
    java.lang.String val$path -> b
    com.mars.note.fragment.SearchFragment$ListItemImg val$item -> c
    android.os.Handler val$handler -> d
    void run() -> run
com.mars.note.fragment.SearchFragment$SearchListAdapter$3 -> com.mars.note.b.ba:
    com.mars.note.fragment.SearchFragment$SearchListAdapter this$1 -> a
    com.mars.note.database.NoteRecord val$nr -> b
    void onClick(android.view.View) -> onClick
com.mars.note.fragment.SearchFragment$ViewHolder -> com.mars.note.b.bb:
    int position -> a
    android.widget.TextView date -> b
    android.widget.TextView time -> c
    android.widget.TextView title -> d
    android.widget.TextView content -> e
    android.view.ViewGroup titleAndContent -> f
    android.widget.ImageView img -> g
    com.mars.note.fragment.SearchFragment this$0 -> h
com.mars.note.provider.MyRemoteViewsFactory -> com.mars.note.provider.a:
    java.lang.String TAG -> a
    android.content.Context context -> b
    android.content.Intent intent -> c
    int widgetID -> f
    java.util.List datas -> d
    com.mars.note.database.NoteDataBaseManager noteDBManager -> e
    android.support.v4.util.LruCache mBitmapCache -> g
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    android.widget.RemoteViews getLoadingView() -> getLoadingView
    android.widget.RemoteViews getViewAt(int) -> getViewAt
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    void onCreate() -> onCreate
    void onDataSetChanged() -> onDataSetChanged
    void onDestroy() -> onDestroy
com.mars.note.provider.MyRemoteViewsService -> com.mars.note.provider.MyRemoteViewsService:
    android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent) -> onGetViewFactory
com.mars.note.provider.NoteCollectionsWidgetProvider -> com.mars.note.provider.NoteCollectionsWidgetProvider:
    java.lang.String TAG -> a
    android.appwidget.AppWidgetManager appWidgetManager -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void onDeleted(android.content.Context,int[]) -> onDeleted
    void onDisabled(android.content.Context) -> onDisabled
    void onEnabled(android.content.Context) -> onEnabled
com.mars.note.provider.NoteWidgetProvider -> com.mars.note.provider.NoteWidgetProvider:
    java.lang.String TAG -> a
    com.mars.note.database.NoteDataBaseManager noteDBManager -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void onDeleted(android.content.Context,int[]) -> onDeleted
    void onDisabled(android.content.Context) -> onDisabled
    void onEnabled(android.content.Context) -> onEnabled
com.mars.note.provider.WidgetConfiguration -> com.mars.note.provider.WidgetConfiguration:
    int appWidgetId -> a
    android.view.View relate -> b
    android.view.View addNew -> c
    android.widget.TextView txt -> d
    android.widget.ListView lv -> e
    android.widget.SearchView searchView -> f
    java.lang.String query -> g
    java.util.List result_list -> h
    android.widget.BaseAdapter searchListAdapter -> i
    java.lang.String[] date_title -> j
    java.lang.String[] time_title -> k
    com.mars.note.database.NoteDataBaseManager noteDBManager -> l
    android.view.View$OnClickListener onClickListener -> m
    android.support.v4.util.LruCache mBitmapCache -> n
    java.util.concurrent.ExecutorService executors -> o
    void onCreate(android.os.Bundle) -> onCreate
    void validate() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void relate() -> c
    void onClick(android.view.View) -> onClick
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    android.support.v4.util.LruCache access$0() -> a
    java.util.concurrent.ExecutorService access$1(com.mars.note.provider.WidgetConfiguration) -> a
com.mars.note.provider.WidgetConfiguration$1 -> com.mars.note.provider.b:
    com.mars.note.provider.WidgetConfiguration this$0 -> a
    void onClick(android.view.View) -> onClick
    com.mars.note.provider.WidgetConfiguration access$0(com.mars.note.provider.WidgetConfiguration$1) -> a
com.mars.note.provider.WidgetConfiguration$1$1 -> com.mars.note.provider.c:
    com.mars.note.provider.WidgetConfiguration$1 this$1 -> a
    com.mars.note.provider.WidgetConfiguration$ViewHolder val$holder -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mars.note.provider.WidgetConfiguration$ListItemImg -> com.mars.note.provider.d:
    int position -> a
    android.graphics.Bitmap bm -> b
    com.mars.note.provider.WidgetConfiguration this$0 -> c
com.mars.note.provider.WidgetConfiguration$SearchListAdapter -> com.mars.note.provider.e:
    android.view.LayoutInflater inflater -> a
    java.util.List list -> b
    com.mars.note.provider.WidgetConfiguration this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String getdayOfWeek(int) -> a
    com.mars.note.provider.WidgetConfiguration access$0(com.mars.note.provider.WidgetConfiguration$SearchListAdapter) -> a
com.mars.note.provider.WidgetConfiguration$SearchListAdapter$1 -> com.mars.note.provider.f:
    com.mars.note.provider.WidgetConfiguration$SearchListAdapter this$1 -> a
    android.widget.ImageView val$img -> b
    com.mars.note.provider.WidgetConfiguration$ListItemImg val$item -> c
    void handleMessage(android.os.Message) -> handleMessage
com.mars.note.provider.WidgetConfiguration$SearchListAdapter$2 -> com.mars.note.provider.g:
    com.mars.note.provider.WidgetConfiguration$SearchListAdapter this$1 -> a
    java.lang.String val$path -> b
    com.mars.note.provider.WidgetConfiguration$ListItemImg val$item -> c
    android.os.Handler val$handler -> d
    void run() -> run
com.mars.note.provider.WidgetConfiguration$ViewHolder -> com.mars.note.provider.h:
    int position -> a
    android.widget.TextView date -> b
    android.widget.TextView time -> c
    android.widget.TextView title -> d
    android.widget.TextView content -> e
    android.view.ViewGroup titleAndContent -> f
    android.widget.ImageView img -> g
    java.lang.String id -> h
    com.mars.note.provider.WidgetConfiguration this$0 -> i
com.mars.note.server.LoginServer -> com.mars.note.server.LoginServer:
    android.widget.CheckBox cbx -> a
    android.widget.EditText user_name -> b
    android.widget.EditText password -> c
    android.view.View showPwdLayout -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onClick(android.view.View) -> onClick
    void register(android.view.View) -> register
com.mars.note.server.Register -> com.mars.note.server.Register:
    android.widget.ImageView head_photo -> e
    int SELECT_PIC_KITKAT -> f
    int SELECT_PIC -> g
    android.widget.EditText email -> a
    android.widget.EditText pwd1 -> b
    android.widget.EditText pwd2 -> c
    android.widget.EditText username -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onClick(android.view.View) -> onClick
    void ChooseImage() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
    void setPicToView(android.content.Intent) -> a
    void saveBitmap(android.graphics.Bitmap) -> a
    boolean isEmail(java.lang.String) -> a
    boolean isPasswordCorrect(java.lang.String,java.lang.String) -> a
    boolean isUserNameCorrect(java.lang.String) -> b
    void registerInfo(android.view.View) -> registerInfo
    void uploadJSON(org.json.JSONObject) -> a
    void access$0(com.mars.note.server.Register,org.json.JSONObject) -> a
com.mars.note.server.Register$1 -> com.mars.note.server.a:
    com.mars.note.server.Register this$0 -> a
    org.json.JSONObject val$jsonObj -> b
    void run() -> run
com.mars.note.utils.AnimationHelper -> com.mars.note.c.a:
    void runRotateAnim(android.view.View,float,float,int) -> a
    void runScaleAnim(android.view.View,float,float,int,android.animation.Animator$AnimatorListener) -> a
    void runHorizontalOutAnim(android.view.View,float,float,int) -> b
    void runHorizontalInAnim(android.view.View,float,float,int) -> c
    void runVerticalInAnim(android.view.View,float,float,int) -> d
    void runVerticalOutAnim(android.view.View,float,float,int) -> e
com.mars.note.utils.AnimationHelper$3 -> com.mars.note.c.b:
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.mars.note.utils.AnimationHelper$4 -> com.mars.note.c.c:
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.mars.note.utils.FileHelper -> com.mars.note.c.d:
    void copyFile(java.io.File,java.io.File) -> a
    boolean deleteFile(java.lang.String) -> a
    java.util.List getBackupDocs(java.lang.String) -> b
com.mars.note.utils.PictureHelper -> com.mars.note.c.e:
    android.graphics.Bitmap getCropImage(java.lang.String,float,boolean,int,android.content.Context,int,boolean) -> a
    android.graphics.Bitmap getImageFromPath(java.lang.String,float,float,boolean,int,android.content.Context,int,boolean) -> a
    android.graphics.Bitmap compressImage(android.graphics.Bitmap,int) -> a
    java.lang.String getPath(android.content.Context,android.net.Uri) -> a
    java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[]) -> a
    boolean isExternalStorageDocument(android.net.Uri) -> a
    boolean isDownloadsDocument(android.net.Uri) -> b
    boolean isMediaDocument(android.net.Uri) -> c
    boolean isGooglePhotosUri(android.net.Uri) -> d
    android.graphics.Bitmap addEdge(android.graphics.Bitmap,android.content.Context,int) -> a
    void saveBitmapToPath(android.graphics.Bitmap,java.lang.String) -> a
com.mars.note.views.BounceListView -> com.mars.note.views.BounceListView:
    boolean isScrollable -> b
    boolean isTouchable -> c
    float preX -> a
    android.content.Context mContext -> d
    int mMaxYOverscrollDistance -> e
    void initBounceListView() -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
    void setScrollable(boolean) -> setScrollable
    void setTouchable(boolean) -> setTouchable
    void scrollTo(int,int) -> scrollTo
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.mars.note.views.BounceViewPager -> com.mars.note.views.BounceViewPager:
    boolean isScrollable -> b
    boolean isTouchable -> c
    android.graphics.Rect mRect -> d
    int pagerCount -> e
    int currentItem -> f
    boolean handleDefault -> g
    float preX -> a
    boolean isSpringback -> h
    void setSpringBack(boolean) -> setSpringBack
    void setScrollable(boolean) -> setScrollable
    void setTouchable(boolean) -> setTouchable
    void scrollTo(int,int) -> scrollTo
    void init() -> g
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setpagerCount(int) -> setpagerCount
    void setCurrentIndex(int) -> setCurrentIndex
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void whetherConditionIsRight(float) -> b
    void onTouchActionUp() -> h
    void recoveryPosition() -> i
    void setCurrentItem(int) -> setCurrentItem
com.mars.note.views.BounceViewPager$1 -> com.mars.note.views.a:
    com.mars.note.views.BounceViewPager this$0 -> a
    void onPageSelected(int) -> a_
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
com.mars.note.views.DataAlterDialog -> com.mars.note.views.b:
    java.lang.String TAG -> a
    android.widget.DatePicker mDatePicker -> d
    com.mars.note.views.DataAlterDialog$OnDateSetListener mCallBack -> e
    java.util.Calendar mCalendar -> f
    boolean mTitleNeedsUpdate -> g
    android.widget.Button mOKBtn -> b
    boolean showAll -> c
    com.mars.note.views.DataAlterDialog setBtnListener(android.view.View$OnClickListener) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDateChanged(android.widget.DatePicker,int,int,int) -> onDateChanged
    android.widget.DatePicker getDatePicker() -> a
    void showAll() -> b
    void tryNotifyDateSet() -> c
    void onStop() -> onStop
    android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
com.mars.note.views.DataAlterDialog$OnDateSetListener -> com.mars.note.views.c:
    void onDateSet(android.widget.DatePicker,int,int,int) -> a
com.mars.note.views.DrawerMenu -> com.mars.note.views.DrawerMenu:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.mars.note.views.EditTextWithDel -> com.mars.note.views.EditTextWithDel:
    android.graphics.drawable.Drawable enable -> a
    android.graphics.drawable.Drawable unable -> b
    void init() -> a
    void setDrawable() -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void access$0(com.mars.note.views.EditTextWithDel) -> a
com.mars.note.views.EditTextWithDel$1 -> com.mars.note.views.d:
    com.mars.note.views.EditTextWithDel this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.mars.note.views.GestureLockView -> com.mars.note.views.GestureLockView:
    android.graphics.Paint paintNormal -> a
    android.graphics.Paint paintOnTouch -> b
    android.graphics.Paint paintInnerCycle -> c
    android.graphics.Paint paintLines -> d
    android.graphics.Paint paintKeyError -> e
    com.mars.note.views.GestureLockView$MyCircle[] cycles -> f
    android.graphics.Path linePath -> g
    java.util.List linedCycles -> h
    com.mars.note.views.GestureLockView$OnGestureFinishListener onGestureFinishListener -> i
    java.lang.String key -> j
    int eventX -> k
    int eventY -> l
    boolean canContinue -> m
    boolean result -> n
    java.util.Timer timer -> o
    int OUT_CYCLE_NORMAL -> p
    int OUT_CYCLE_ONTOUCH -> q
    int INNER_CYCLE_TOUCHED -> r
    int INNER_CYCLE_NOTOUCH -> s
    int LINE_COLOR -> t
    int INNER_CYCLE_ERROR_COLOR -> u
    int ERROR_COLOR -> v
    void setOnGestureFinishListener(com.mars.note.views.GestureLockView$OnGestureFinishListener) -> setOnGestureFinishListener
    void setKey(java.lang.String) -> setKey
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawLine(android.graphics.Canvas) -> a
    void drawInnerBlueCycle(com.mars.note.views.GestureLockView$MyCircle,android.graphics.Canvas) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void access$0(com.mars.note.views.GestureLockView,int) -> a
    void access$1(com.mars.note.views.GestureLockView,int) -> b
    com.mars.note.views.GestureLockView$MyCircle[] access$2(com.mars.note.views.GestureLockView) -> a
    java.util.List access$3(com.mars.note.views.GestureLockView) -> b
    android.graphics.Path access$4(com.mars.note.views.GestureLockView) -> c
    void access$5(com.mars.note.views.GestureLockView,boolean) -> a
com.mars.note.views.GestureLockView$1 -> com.mars.note.views.e:
    com.mars.note.views.GestureLockView this$0 -> a
    void run() -> run
com.mars.note.views.GestureLockView$MyCircle -> com.mars.note.views.f:
    int ox -> b
    int oy -> c
    float r -> d
    java.lang.Integer num -> e
    boolean onTouch -> f
    com.mars.note.views.GestureLockView this$0 -> a
    int getOx() -> a
    void setOx(int) -> a
    int getOy() -> b
    void setOy(int) -> b
    float getR() -> c
    void setR(float) -> a
    java.lang.Integer getNum() -> d
    void setNum(java.lang.Integer) -> a
    boolean isOnTouch() -> e
    void setOnTouch(boolean) -> a
    boolean isPointIn(int,int) -> a
com.mars.note.views.GestureLockView$OnGestureFinishListener -> com.mars.note.views.g:
    void OnGestureFinish(boolean,java.lang.String) -> a
com.mars.note.views.MarsScrollView -> com.mars.note.views.MarsScrollView:
    android.content.Context mContext -> a
    android.view.View mView -> c
    float touchY -> d
    int scrollY -> e
    boolean handleStop -> f
    int eachStep -> g
    android.os.Handler resetPositionHandler -> b
    void onFinishInflate() -> onFinishInflate
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void commonOnTouchEvent(android.view.MotionEvent) -> a
    boolean isNeedMove() -> a
    void animation() -> b
    int access$0(com.mars.note.views.MarsScrollView) -> a
    boolean access$1(com.mars.note.views.MarsScrollView) -> b
    int access$2(com.mars.note.views.MarsScrollView) -> c
    void access$3(com.mars.note.views.MarsScrollView,int) -> a
    android.view.View access$4(com.mars.note.views.MarsScrollView) -> d
com.mars.note.views.MarsScrollView$1 -> com.mars.note.views.h:
    com.mars.note.views.MarsScrollView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mars.note.views.MyGridView -> com.mars.note.views.MyGridView:
    boolean onMeasure -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.mars.note.views.NoteCalendar -> com.mars.note.views.NoteCalendar:
    int nums_of_row -> n
    int nums_of_columns -> o
    float gridWidth -> p
    float gridHeight -> q
    float titleGridHeight -> r
    float titleGridWidth -> s
    int backgroundColor -> t
    boolean showGridRowLine -> u
    boolean showGridColumnLine -> v
    int currentMonthEndX -> w
    int currentMonthEndY -> x
    int currentMonthTextColor -> y
    int otherMonthTextColor -> z
    int countColor -> A
    int selectedCellBG -> B
    int currentMonthTextSize -> C
    int otherMonthTextSize -> D
    boolean touchable -> E
    com.mars.note.database.NoteDataBaseManager mNoteDataBaseManager -> F
    com.mars.note.views.NoteCalendar$Cell[][] currentMonthArray -> a
    int[] record_count -> b
    int Year -> G
    int Month -> H
    int DayOfMonth -> I
    int selectedYear -> J
    int selectedMonth -> K
    int selectedDay -> L
    int todayYear -> M
    int todayMonth -> N
    int todayDay -> O
    int SLIDING_LENGTH -> c
    android.graphics.Paint paint -> d
    int row1 -> e
    int row2 -> f
    int row3 -> g
    int column1 -> h
    int column2 -> i
    int column3 -> j
    boolean notOutOfRange -> k
    float begin -> l
    com.mars.note.views.NoteCalendar$ChangeDateListener mChangeDateListener -> m
    void setTouchable(boolean) -> setTouchable
    void setYear(int) -> setYear
    void setMonth(int) -> setMonth
    void setDayOfMonth(int) -> setDayOfMonth
    int getSelectedYear() -> getSelectedYear
    int getSelectedMonth() -> getSelectedMonth
    int getSelectedDay() -> getSelectedDay
    void setSelectedDay(int,int,int) -> a
    void initNoteDataBaseManager(android.content.Context) -> a
    void setCurrentDate() -> c
    void setOnChangeDateListener(com.mars.note.views.NoteCalendar$ChangeDateListener) -> setOnChangeDateListener
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDayOfMonth(android.graphics.Canvas) -> a
    void drawCellBG(android.graphics.Canvas,int,int,int,boolean) -> a
    void drawWeeks(android.graphics.Canvas) -> b
    void drawRowsAndColumns(android.graphics.Canvas) -> c
    void drawCalendarEdge(android.graphics.Canvas) -> d
    void drawCalendarBG(android.graphics.Canvas) -> e
    int getDayOfWeek(int,int,int) -> b
    int getDaysOfMonth(int,int) -> a
    void caculateOtherMonthDates() -> a
    void caculateCurrentMonthDates() -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeDate(int,int) -> c
    int getYear() -> getYear
    int getMonth() -> getMonth
    int getDayOfMonth() -> getDayOfMonth
    void setYearAndMonth(int,int) -> b
com.mars.note.views.NoteCalendar$Cell -> com.mars.note.views.i:
    int year -> a
    int month -> b
    int dayOfMonth -> c
    boolean isCurrentDayOfMonth -> d
    int record_count -> e
    com.mars.note.views.NoteCalendar this$0 -> f
com.mars.note.views.NoteCalendar$ChangeDateListener -> com.mars.note.views.j:
    void onChangeSelectedDate(int,int,int) -> a
com.mars.note.views.NoteContentEditText -> com.mars.note.views.NoteContentEditText:
    void onDraw(android.graphics.Canvas) -> onDraw
com.nineoldandroids.view.ViewHelper -> com.a.a.a:
    float getAlpha(android.view.View) -> a
    void setAlpha(android.view.View,float) -> a
    void setPivotX(android.view.View,float) -> b
    void setPivotY(android.view.View,float) -> c
    float getRotation(android.view.View) -> b
    void setRotation(android.view.View,float) -> d
    float getRotationX(android.view.View) -> c
    void setRotationX(android.view.View,float) -> e
    float getRotationY(android.view.View) -> d
    void setRotationY(android.view.View,float) -> f
    float getScaleX(android.view.View) -> e
    void setScaleX(android.view.View,float) -> g
    float getScaleY(android.view.View) -> f
    void setScaleY(android.view.View,float) -> h
    float getTranslationX(android.view.View) -> g
    void setTranslationX(android.view.View,float) -> i
    float getTranslationY(android.view.View) -> h
    void setTranslationY(android.view.View,float) -> j
com.nineoldandroids.view.ViewHelper$Honeycomb -> com.a.a.b:
    float getAlpha(android.view.View) -> a
    void setAlpha(android.view.View,float) -> a
    void setPivotX(android.view.View,float) -> b
    void setPivotY(android.view.View,float) -> c
    float getRotation(android.view.View) -> b
    void setRotation(android.view.View,float) -> d
    float getRotationX(android.view.View) -> c
    void setRotationX(android.view.View,float) -> e
    float getRotationY(android.view.View) -> d
    void setRotationY(android.view.View,float) -> f
    float getScaleX(android.view.View) -> e
    void setScaleX(android.view.View,float) -> g
    float getScaleY(android.view.View) -> f
    void setScaleY(android.view.View,float) -> h
    float getTranslationX(android.view.View) -> g
    void setTranslationX(android.view.View,float) -> i
    float getTranslationY(android.view.View) -> h
    void setTranslationY(android.view.View,float) -> j
com.nineoldandroids.view.animation.AnimatorProxy -> com.a.a.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    android.graphics.Camera mCamera -> d
    boolean mHasPivot -> e
    float mAlpha -> f
    float mPivotX -> g
    float mPivotY -> h
    float mRotationX -> i
    float mRotationY -> j
    float mRotationZ -> k
    float mScaleX -> l
    float mScaleY -> m
    float mTranslationX -> n
    float mTranslationY -> o
    android.graphics.RectF mBefore -> p
    android.graphics.RectF mAfter -> q
    android.graphics.Matrix mTempMatrix -> r
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    void setPivotX(float) -> b
    void setPivotY(float) -> c
    float getRotation() -> b
    void setRotation(float) -> d
    float getRotationX() -> c
    void setRotationX(float) -> e
    float getRotationY() -> d
    void setRotationY(float) -> f
    float getScaleX() -> e
    void setScaleX(float) -> g
    float getScaleY() -> f
    void setScaleY(float) -> h
    float getTranslationX() -> g
    void setTranslationX(float) -> i
    float getTranslationY() -> h
    void setTranslationY(float) -> j
    void prepareForUpdate() -> i
    void invalidateAfterUpdate() -> j
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
